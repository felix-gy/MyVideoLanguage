digraph Tree {
    node [shape=ellipse];
    node0 [label="Program"];
    node0 -> node1;
    node1 [label="StmtList"];
    node1 -> node3;
    node3 [label="Stmt"];
    node3 -> node4;
    node4 [label="StmtDA"];
    node4 -> node6;
    node6 [label="ID , video1"];
    node4 -> node5;
    node5 [label="StmtDA'"];
    node5 -> node7;
    node7 [label="Decl"];
    node7 -> node12;
    node12 [label=":"];
    node7 -> node11;
    node11 [label="Type"];
    node11 -> node13;
    node13 [label="Video"];
    node7 -> node10;
    node10 [label="="];
    node7 -> node9;
    node9 [label="Expr"];
    node9 -> node14;
    node14 [label="RelExpr"];
    node14 -> node16;
    node16 [label="AddExpr"];
    node16 -> node18;
    node18 [label="TransExpr"];
    node18 -> node20;
    node20 [label="ConcatExpr"];
    node20 -> node22;
    node22 [label="PrimExpr"];
    node22 -> node23;
    node23 [label="FuncCall"];
    node23 -> node27;
    node27 [label="load"];
    node23 -> node26;
    node26 [label="("];
    node23 -> node25;
    node25 [label="STRING_LITERAL , video.txt"];
    node23 -> node24;
    node24 [label=")"];
    node20 -> node21;
    node21 [label="ConcatExpr'"];
    node21 -> node28;
    node28 [label="E"];
    node18 -> node19;
    node19 [label="TransExpr'"];
    node19 -> node29;
    node29 [label="E"];
    node16 -> node17;
    node17 [label="AddExpr'"];
    node17 -> node30;
    node30 [label="E"];
    node14 -> node15;
    node15 [label="RelExpr'"];
    node15 -> node31;
    node31 [label="E"];
    node7 -> node8;
    node8 [label=";"];
    node1 -> node2;
    node2 [label="StmtList'"];
    node2 -> node33;
    node33 [label="Stmt"];
    node33 -> node34;
    node34 [label="StmtDA"];
    node34 -> node36;
    node36 [label="ID , myint"];
    node34 -> node35;
    node35 [label="StmtDA'"];
    node35 -> node37;
    node37 [label="Decl"];
    node37 -> node42;
    node42 [label=":"];
    node37 -> node41;
    node41 [label="Type"];
    node41 -> node43;
    node43 [label="Int"];
    node37 -> node40;
    node40 [label="="];
    node37 -> node39;
    node39 [label="Expr"];
    node39 -> node44;
    node44 [label="RelExpr"];
    node44 -> node46;
    node46 [label="AddExpr"];
    node46 -> node48;
    node48 [label="TransExpr"];
    node48 -> node50;
    node50 [label="ConcatExpr"];
    node50 -> node52;
    node52 [label="PrimExpr"];
    node52 -> node53;
    node53 [label="INT_LITERAL , 4"];
    node50 -> node51;
    node51 [label="ConcatExpr'"];
    node51 -> node54;
    node54 [label="E"];
    node48 -> node49;
    node49 [label="TransExpr'"];
    node49 -> node55;
    node55 [label="E"];
    node46 -> node47;
    node47 [label="AddExpr'"];
    node47 -> node56;
    node56 [label="E"];
    node44 -> node45;
    node45 [label="RelExpr'"];
    node45 -> node57;
    node57 [label="E"];
    node37 -> node38;
    node38 [label=";"];
    node2 -> node32;
    node32 [label="StmtList'"];
    node32 -> node59;
    node59 [label="Stmt"];
    node59 -> node60;
    node60 [label="IfStmt"];
    node60 -> node67;
    node67 [label="if"];
    node60 -> node66;
    node66 [label="("];
    node60 -> node65;
    node65 [label="CondExpr"];
    node65 -> node70;
    node70 [label="PrimExpr"];
    node70 -> node71;
    node71 [label="ID , a"];
    node65 -> node69;
    node69 [label="CompOp"];
    node69 -> node72;
    node72 [label="eq"];
    node65 -> node68;
    node68 [label="PrimExpr"];
    node68 -> node73;
    node73 [label="ID , b"];
    node60 -> node64;
    node64 [label=")"];
    node60 -> node63;
    node63 [label="then"];
    node60 -> node62;
    node62 [label="StmtList"];
    node62 -> node75;
    node75 [label="Stmt"];
    node75 -> node76;
    node76 [label="PrintStmt"];
    node76 -> node81;
    node81 [label="print"];
    node76 -> node80;
    node80 [label="("];
    node76 -> node79;
    node79 [label="STRING_LITERAL , Son iguales"];
    node76 -> node78;
    node78 [label=")"];
    node76 -> node77;
    node77 [label=";"];
    node62 -> node74;
    node74 [label="StmtList'"];
    node74 -> node82;
    node82 [label="E"];
    node60 -> node61;
    node61 [label="end"];
    node32 -> node58;
    node58 [label="StmtList'"];
    node58 -> node83;
    node83 [label="E"];
}
